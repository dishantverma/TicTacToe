{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dishant\\\\TicTacToe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dishant\\\\TicTacToe\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => {\n        this.props.onClick(i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  createBoard() {\n    let board = [];\n\n    for (let i = 0; i < 9; i = i + 3) {\n      let children = [];\n\n      for (let j = 1; j < 4; j++) {\n        this.renderSquare(i + j);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.createBoard());\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      histry: [{\n        squares: Array(9).fill(null),\n        number: 0\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      selectedSquare: {}\n    };\n  }\n\n  handleClick(i) {\n    const histry = this.state.histry.slice(0, this.state.stepNumber + 1);\n    const current = histry[histry.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      histry: [...histry, {\n        squares: squares,\n        number: i\n      }],\n      stepNumber: histry.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n    this.selectBold(step);\n  }\n\n  selectBold(step) {\n    let selected = {};\n    selected[step] = this.state.selectedSquare[step] = \"selected\";\n    this.setState({\n      selectedSquare: selected\n    });\n  } //Task 2 :Bold the currently selected item in the move list.\n\n\n  render() {\n    const histry = this.state.histry;\n    const current = histry[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const number = 3;\n    const moves = histry.map((step, move) => {\n      const desc = move ? 'Go to move #' + move + ' (' + Math.floor(histry[move].number / number) + \",\" + histry[move].number % 3 + ')' : 'Go to game start';\n      const selected = this.state.selectedSquare[move];\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        className: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner :' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:\\Users\\Dishant\\TicTacToe\\src\\index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","createBoard","board","children","j","render","Game","constructor","state","histry","Array","fill","number","stepNumber","xIsNext","selectedSquare","handleClick","slice","current","length","calculateWinner","setState","jumpTo","step","selectBold","selected","winner","moves","map","move","desc","Math","floor","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return <Square\r\n      value={this.props.squares[i]}\r\n      onClick={() => { this.props.onClick(i) }}\r\n    />;\r\n  }\r\n\r\n  createBoard()\r\n  { \r\n    let board=[]\r\n\r\n    for (let i=0;i<9;i=i+3)\r\n    {\r\n      let children=[]\r\n      for (let j=1;j<4;j++)      \r\n      {this.renderSquare(i+j)}\r\n    }\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board-row\">\r\n        {this.createBoard()}\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      histry: [{\r\n        squares: Array(9).fill(null),\r\n        number:0        \r\n      }],\r\n      stepNumber:0,\r\n      xIsNext: true,    \r\n      selectedSquare:{}\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const histry = this.state.histry.slice(0, this.state.stepNumber+1);\r\n    const current = histry[histry.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      histry: [...histry,{squares: squares,number:i}],\r\n      stepNumber: histry.length,\r\n      xIsNext: !this.state.xIsNext,\r\n      \r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n\r\n     this.setState({\r\n      stepNumber:step,\r\n      xIsNext: (step % 2)===0     \r\n      });\r\n\r\n    this.selectBold(step);\r\n  }\r\n\r\n  selectBold(step)\r\n  {\r\n    let selected={}\r\n    selected[step]= this.state.selectedSquare[step]=\"selected\"\r\n    this.setState ({selectedSquare:selected})\r\n  }\r\n\r\n \r\n  //Task 2 :Bold the currently selected item in the move list.\r\n  render() {\r\n    const histry = this.state.histry;\r\n    const current = histry[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const number=3;\r\n    \r\n    \r\n    const moves = histry.map((step,move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move + ' ('+Math.floor(histry[move].number/number)+\",\"+histry[move].number%3+')':\r\n        'Go to game start';\r\n        const selected=this.state.selectedSquare[move];\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)} className={selected}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n     \r\n\r\n    let status\r\n    if (winner) {\r\n      status = 'Winner :' + winner;\r\n    }\r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}>\r\n          </Board>\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"]},"metadata":{},"sourceType":"module"}