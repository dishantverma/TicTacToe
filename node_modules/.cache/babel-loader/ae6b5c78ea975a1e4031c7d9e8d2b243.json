{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Dishant\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dishant\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => {\n        this.props.onClick(i);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        number: 0,\n        decideStyle: \"normal\"\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: [...history, {\n        squares: squares,\n        number: i,\n        decideStyle: \"normal\"\n      }],\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    const chistory = this.state.history;\n    chistory = chistory.map((step, i) => {\n      if (i == step) step.decideStyle = \"boldtext\";else step.decideStyle = \"normal\";\n    });\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      history: chistory\n    });\n  } // onUpdateItem = i => {\n  //   this.setState(state => {\n  //     const list = state.list.map((item, j) => {\n  //       if (j === i) {\n  //         return item + 1;\n  //       } else {\n  //         return item;\n  //       }\n  //     });\n  //     return {\n  //       list,\n  //     };\n  //   });\n  // };\n  //Task 2 :Bold the currently selected item in the move list.\n\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const number = 3;\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move + ' (' + Math.floor(history[move].number / number) + \",\" + history[move].number % 3 + ')' : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        className: step.decideStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner :' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:\\Users\\Dishant\\my-app\\src\\index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","number","decideStyle","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","setState","jumpTo","step","chistory","map","winner","moves","move","desc","Math","floor","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return <Square\r\n      value={this.props.squares[i]}\r\n      onClick={() => { this.props.onClick(i) }}\r\n    />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        number:0,\r\n        decideStyle:\"normal\" \r\n      }],\r\n      stepNumber:0,\r\n      xIsNext: true,    \r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: [...history,{squares: squares,number:i,decideStyle:\"normal\"}],\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n\r\n    const chistory= this.state.history;\r\n    chistory=chistory.map((step,i) => {\r\n      if(i == step)\r\n      step.decideStyle=\"boldtext\"\r\n      else \r\n      step.decideStyle=\"normal\"\r\n    });\r\n    \r\n\r\n    this.setState({\r\n      stepNumber:step,\r\n      xIsNext: (step % 2)===0,\r\n      history:chistory\r\n      }     \r\n    );\r\n\r\n  }\r\n\r\n  // onUpdateItem = i => {\r\n  //   this.setState(state => {\r\n  //     const list = state.list.map((item, j) => {\r\n  //       if (j === i) {\r\n  //         return item + 1;\r\n  //       } else {\r\n  //         return item;\r\n  //       }\r\n  //     });\r\n\r\n  //     return {\r\n  //       list,\r\n  //     };\r\n  //   });\r\n  // };\r\n  \r\n  //Task 2 :Bold the currently selected item in the move list.\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const number=3;\r\n    \r\n    const moves = history.map((step,move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move + ' ('+Math.floor(history[move].number/number)+\",\"+history[move].number%3+')':\r\n        'Go to game start';\r\n\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)} className={step.decideStyle}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      )\r\n    })\r\n     \r\n\r\n    let status\r\n    if (winner) {\r\n      status = 'Winner :' + winner;\r\n    }\r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}>\r\n          </Board>\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"]},"metadata":{},"sourceType":"module"}